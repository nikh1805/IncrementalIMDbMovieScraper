# Generated by Django 4.2.18 on 2025-01-25 06:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScrapeStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_term', models.CharField(db_index=True, help_text='The term being scraped (genre or keyword).', max_length=255, unique=True)),
                ('is_completed', models.BooleanField(default=False, help_text='True if the scraping is completed.')),
                ('error_message', models.TextField(blank=True, help_text='Details of any error encountered during scraping.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Name of the tag (genre or keyword).', max_length=255, unique=True)),
                ('movies_count', models.IntegerField(default=0, help_text='Number of movies associated with this tag.')),
                ('is_genre', models.BooleanField(default=True, help_text='True if the tag represents a genre, False for a keyword.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the tag was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the tag was last updated.')),
            ],
        ),
        migrations.CreateModel(
            name='Movies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='The title of the movie.', max_length=255, unique=True)),
                ('director', models.JSONField(help_text='JSON field storing director details.')),
                ('cast', models.JSONField(help_text='JSON field storing cast details.')),
                ('rating', models.FloatField(help_text="The movie's rating.")),
                ('year', models.IntegerField(help_text='The year the movie was released.')),
                ('summary', models.TextField(help_text='Plot summary or description of the movie.')),
                ('tags', models.ManyToManyField(help_text='Genres and keywords associated with the movie.', related_name='movies', to='movie_scraper_app.tag')),
            ],
        ),
    ]
